diff --git a/src/wallet/rpcwallet.cpp b/src/wallet/rpcwallet.cpp
index 233aaab..00fd5bd 100644
--- a/src/wallet/rpcwallet.cpp
+++ b/src/wallet/rpcwallet.cpp
@@ -1036,6 +1036,8 @@ UniValue cleanwallettransactions(const UniValue& params, bool fHelp, const CPubK
     UniValue ret(UniValue::VOBJ);
     uint256 exception; int32_t txs = pwalletMain->mapWallet.size();
     std::vector<uint256> TxToRemove;
+    std::set<uint256> setNoDeleteParents;
+
     if (params.size() == 1)
     {
         exception.SetHex(params[0].get_str());
@@ -1090,7 +1092,19 @@ UniValue cleanwallettransactions(const UniValue& params, bool fHelp, const CPubK
         for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); ++it)
         {
             const CWalletTx& wtx = (*it).second;
-            if (wtx.GetDepthInMainChain() > oldestTxDepth)
+            int nDepth = wtx.GetDepthInMainChain();
+            /*
+                If we have zero conf txes in the wallet, we shouldn't delete it's parents (txes from which they are
+                dependent), bcz in this case next call to AvailableCoins will exclude such zero conf txes from result,
+                CWalletTx::IsTrusted() will become false. I.e. if we deleted parents, we can't determine that all
+                inputs are from us. So, better to avoid delete vins of existing zero conf txes.
+            */
+            if (nDepth == 0) {
+                for (const CTxIn& txin : wtx.vin) {
+                    setNoDeleteParents.insert(txin.prevout.hash);
+                }
+            }
+            if (nDepth > oldestTxDepth)
                 TxToRemove.push_back(wtx.GetHash());
         }
     }
@@ -1098,8 +1112,10 @@ UniValue cleanwallettransactions(const UniValue& params, bool fHelp, const CPubK
     // erase txs
     BOOST_FOREACH (uint256& hash, TxToRemove)
     {
-        pwalletMain->EraseFromWallet(hash);
-        LogPrintf("Erased %s from wallet.\n",hash.ToString().c_str());
+        if (setNoDeleteParents.count(hash) == 0) {
+            pwalletMain->EraseFromWallet(hash);
+            LogPrintf("Erased %s from wallet.\n",hash.ToString().c_str());
+        }
     }
 
     // build return JSON for stats.
@@ -1107,6 +1123,7 @@ UniValue cleanwallettransactions(const UniValue& params, bool fHelp, const CPubK
     ret.push_back(Pair("total_transactions", (int)txs));
     ret.push_back(Pair("remaining_transactions", (int)remaining));
     ret.push_back(Pair("removed_transactions", (int)(txs-remaining)));
+    ret.pushKV("parents_saved_transactions", setNoDeleteParents.size());
     return  (ret);
 }
 
